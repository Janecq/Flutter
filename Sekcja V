import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';

class LoginPage extends StatefulWidget {
  LoginPage({
    super.key,
  });
  final emailController = TextEditingController();

  final passwordController = TextEditingController();

  @override
  State<LoginPage> createState() => _LoginPageState();
}

class _LoginPageState extends State<LoginPage> {
//w lekcji statefull widget powstaje nowa klasa LoginPagestate do zmian w widgetach, ale trzeba rozumieć, że to dalej to samo

  var errorMessage = '';
  var isCreastingAccount =
      false; // domyślnie zakładamy, że się logujemy a nie tw. konto

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Center(
        child: Padding(
          padding: const EdgeInsets.all(20.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Text(isCreastingAccount == true
                  ? 'Zarejestruj się'
                  : 'Zaloguj się'),
              const SizedBox(height: 20),
              TextField(
                controller: widget.emailController,
                decoration: const InputDecoration(hintText: 'E-mail'),
              ), //email
              TextField(
                controller: widget.passwordController,
                obscureText: true, // ukrywa literki
                decoration: const InputDecoration(hintText: 'HASŁO'),
              ), //hasło

              Text(errorMessage),

              const SizedBox(height: 20),
              ElevatedButton(
                // po klinięciu musi wyzwalać zaciągniecie danych z bazych do przypisania do konta
                onPressed: () async {
                  if (isCreastingAccount == true) {
                    // rejestracja

                    try {
                      await FirebaseAuth.instance
                          .createUserWithEmailAndPassword(
                        email: widget.emailController.text,
                        password: widget.passwordController.text,
                      );
                    } catch (error) {
                      setState(() {
                        errorMessage = error
                            .toString(); // możesz wpisać z palca np. 'coś poszło nie tak'; lub przypisać do toString()
                      });
                    }
                  } else {
                    //logowanie

                    try {
                      await FirebaseAuth.instance.signInWithEmailAndPassword(
                        email: widget.emailController.text,
                        password: widget.passwordController.text,
                      );
                    } catch (error) {
                      // ignore: avoid_print
                      setState(() {
                        errorMessage = error
                            .toString(); // możesz wpisać z palca np. 'coś poszło nie tak'; lub przypisać do toString()
                      });
                    }
                  }

                  //await i async dla metod typu future, związanych z dalszym działaniem
                },
                child: Text(isCreastingAccount == true
                    ? 'Zarejestruj się'
                    : 'Zaloguj się'),
              ),
              const SizedBox(height: 20),
              if (isCreastingAccount == false) ...[
                TextButton(
                  onPressed: () {
                    setState(() {
                      isCreastingAccount == true;
                    });
                  },
                  // ignore: prefer_const_constructors
                  child: Text('Utwórz konto'),
                ),
              ],
              if (isCreastingAccount == true) ...[
                TextButton(
                  onPressed: () {
                    setState(() {
                      isCreastingAccount == false;
                    });
                  },
                  // ignore: prefer_const_constructors
                  child: Text('Masz już konto?'),
                ),
              ],
            ],
          ),
        ),
      ),
    );
  }
}
